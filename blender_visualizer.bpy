import bpy
import bmesh

# --- Rydd opp gammel ---
name = "PointLine"
if name in bpy.data.objects:
    bpy.data.objects.remove(bpy.data.objects[name], do_unlink=True)
if name in bpy.data.meshes:
    bpy.data.meshes.remove(bpy.data.meshes[name], do_unlink=True)

# --- Punkter (xyz) ---
points = [
(-1.5445, -0.5000, 0.3544),
(-1.5381, -0.5000, 0.3538),
(-1.5221, -0.5000, 0.3522),
(-1.4964, -0.5000, 0.3496),
(-1.4609, -0.5000, 0.3461),
(-1.4158, -0.5000, 0.3416),
(-1.3609, -0.5000, 0.3361),
(-1.2963, -0.5000, 0.3296),
(-1.2220, -0.5000, 0.3222),
(-1.1380, -0.5000, 0.3138),
(-1.0442, -0.5000, 0.3044),
(-0.9408, -0.5000, 0.2941),
(-0.8276, -0.5000, 0.2828),
(-0.7048, -0.5000, 0.2705),
(-0.5722, -0.5000, 0.2572),
(-0.4303, -0.4997, 0.2360),
(-0.2725, -0.4922, 0.2037),
(-0.0960, -0.4753, 0.1667),
(0.0935, -0.4463, 0.1540),
(0.2747, -0.4047, 0.1679),
(0.4463, -0.3535, 0.1800),
(0.6083, -0.2927, 0.1901),
(0.7606, -0.2223, 0.1983),
(0.9034, -0.1422, 0.2046),
(1.0365, -0.0526, 0.2089),
(1.1518, 0.0424, 0.2304),
(1.2480, 0.1374, 0.2496),
(1.3254, 0.2323, 0.2651),
(1.3838, 0.3273, 0.2768),
(1.4234, 0.4222, 0.2847),
(1.4442, 0.5172, 0.2888),
(1.4460, 0.6121, 0.2892),
(1.4290, 0.7071, 0.2858),
(1.3932, 0.8020, 0.2786),
(1.3384, 0.8970, 0.2677),
(1.2649, 0.9919, 0.2530),
(1.1739, 0.9833, 0.2348),
(1.0643, 0.9646, 0.2129),
(0.9358, 0.9460, 0.1872),
(0.7884, 0.9274, 0.1577),
(0.6221, 0.9088, 0.1244),
(0.4370, 0.8902, 0.0874),
(0.2331, 0.8716, 0.0466),
(0.0885, 0.9323, 0.0177),
(0.0013, 1.0000, 0.0003),
(0.0000, 1.0000, 0.0000),
(0.0000, 1.0000, 0.0000),
(0.0000, 1.0000, 0.0000),
(0.0000, 1.0000, 0.0000),
(0.0000, 1.0000, 0.0000),
(0.0000, 1.0000, 0.0000)
]

# --- Hvordan koble punktene ---
# 1️⃣ Enkelt: koble alle i rekkefølge (åpen linje)
connect_in_order = True

# 2️⃣ Egendefinerte par (eks. for en triangulering eller firkanter)
#edges = [(0,1), (1,3), (3,2), (2,0), (1,4), (4,5), (5,3), (3,1)]
edges = []  # la stå tomt hvis du bruker connect_in_order

# --- Lag mesh + objekt ---
mesh = bpy.data.meshes.new(name)
obj = bpy.data.objects.new(name, mesh)
bpy.context.collection.objects.link(obj)
bpy.context.view_layer.objects.active = obj

bm = bmesh.new()

verts = [bm.verts.new(co) for co in points]
bm.verts.ensure_lookup_table()

# --- Lag linjer ---
if connect_in_order and not edges:
    for i in range(len(verts) - 1):
        bm.edges.new((verts[i], verts[i+1]))
else:
    for a, b in edges:
        bm.edges.new((verts[a], verts[b]))

# --- Ferdigstill ---
bm.to_mesh(mesh)
bm.free()

# --- Vis i wireframe ---
obj.display_type = 'WIRE'
obj.show_all_edges = True

print(f"Laget {len(points)} punkter og {len(mesh.edges)} linjer som '{name}'")
